@model Manejo_Inventario.Models.Material

@{
    ViewBag.Title = "Editar_Material";
}

<style>
    .bg-dark {
        background-color: #343a40 !important;
    }

    .bg-17 {
        background-color: #ffd966 !important;
        font-weight: 700;
    }

    .bg-2 {
        background-color: #9bc2e6 !important;
        font-weight: 700;
    }

    .pname {
        background-color: #bfbfbf !important;
        font-weight: 700;
    }

    .mname {
        background-color: #f2f2f2 !important;
        font-weight: 400;
    }

    .text-white {
        color: #fff !important;
    }
</style>

<div class="jumbotron my-4 bg-dark text-white">
    <h2 class="display-4 font-italic">Editar Material Seleccionado</h2>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(model => model.ID_Material, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.ID_Material, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ID_Material, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2"> Nombre del Material</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombre_Material, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre_Material, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2"> Tipo de Material</p>
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ID_Tipo_De_Material, ViewBag.TmaterialesList as SelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ID_Tipo_De_Material, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2"> Precio por metro/Unidad</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Precio_Por_Metro, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Precio_Por_Metro, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Especificaciones</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Especificaciones, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Especificaciones, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <p class="control-label col-md-2">Proveedor</p>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Proveedor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Proveedor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.Fecha_Actualizada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.Fecha_Actualizada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Fecha_Actualizada, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar Cambios" class="btn btn-default" formaction="@Url.Action("Editar_MaterialDB")" />
        </div>
    </div>
</div>
}
<div>
    @{
        Html.RenderAction("Editar_Material_Ver_Productos_Que_lo_Usan", Model.ID_Material);
    }
</div>


<div>
    @Html.ActionLink("Regresar a la lista de Materiales", "Ver_Materiales")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
